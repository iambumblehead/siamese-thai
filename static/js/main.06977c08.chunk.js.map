{"version":3,"sources":["enums.ts","ThaiNavPrimaryAddress.tsx","ThaiLinkLogo.tsx","ThaiNavPrimaryDrawer.tsx","ThaiNavPrimaryMenu.tsx","ThaiNavPrimary.tsx","useMenuItems.ts","req.ts","ThaiContentMenuSectionItem.tsx","ThaiContentMenuSection.tsx","ThaiContentMenu.tsx","menuUtil.ts","Thai.tsx","i18n.ts","index.tsx"],"names":["list","useStyles","makeStyles","link","textDecoration","linklogo","fontSize","color","whiteSpace","padding","ThaiNavPrimaryAddress","classes","className","href","ThaiNavPrimary","to","Typography","drawerHead","textAlign","drawerHeadButton","ThaiNavPrimaryDrawer","isOpen","onClose","children","Hidden","smUp","implementation","Drawer","variant","anchor","open","ModalProps","keepMounted","Box","IconButton","onClick","ThaiLinkLogo","enumRouteHome","enumRouteOrder","enumRouteLunch","enumRouteMenu","enumRouteContact","enumUriMenu","globalThis","uriMenu","Object","freeze","reduce","p","val","assign","menuBoxTabs","flexGrow","marginRight","justifyContent","display","menuBoxTabsItem","minWidth","drawerTabs","drawerTabsItem","indicator","left","selectedTabRe","RegExp","join","ThaiNavPrimaryMenu","type","location","useLocation","t","useTranslation","classTabs","classTabsItems","orientation","tabValue","test","pathname","Tabs","value","indicatorColor","textColor","centered","Tab","label","component","Link","theme","menu","palette","text","secondary","menuBox","flex","alignItems","menuBoxAddress","position","top","menuBoxBurger","menuBoxBurgerButtonMenu","React","useState","drawerIsOpen","drawerIsOpenSet","useEffect","Paper","square","Menu","onOpen","useMenuItems","menuJSON","menuJSONSet","error","errorSet","fetch","then","data","json","getMenuJSON","items","catch","root","paper","spacing","section","col1","maxWidth","col2","flexBasis","ThaiContentMenuSection","menuItem","en_labelWide","price","sectionName","menuItems","map","ThaiContentMenuSectionItem","en_labelNarrow","ThaiContentMenu","console","log","sections","sectionMap","item","menuItemTypes","itemType","push","keys","prev","key","menuItemsListToSectionsList","Alert","severity","Thai","path","exact","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","home","contact","fallbackLng","debug","interpolation","escapeValue","createMuiTheme","primary","main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06977c08.chunk.js","sourcesContent":["const toObject = (list: Array<string>) =>\n  Object.freeze(list.reduce((p, val) => Object.assign(p, { [val]: val }), {}));\n\nconst enumRouteHome = '/siamese-thai';\nconst enumRouteOrder = '/siamese-thai/order';\nconst enumRouteLunch = '/siamese-thai/lunch-special';\nconst enumRouteMenu = '/siamese-thai/menu';\nconst enumRouteContact = '/siamese-thai/contact';\n\ndeclare global {\n  var uriMenu: string; // eslint-disable-line\n}\n\nconst enumUriMenu = globalThis.uriMenu || './menu.json';\n\nconst enumRoutes = toObject([\n  enumRouteHome,\n  enumRouteOrder,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteContact\n]);\n\nexport {\n  enumRouteHome,\n  enumRouteOrder,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteContact,\n  enumRoutes,\n  enumUriMenu\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    textDecoration: 'none'\n  },\n  linklogo: {\n    fontSize: '32px',\n    color: 'rgb(128,0,128)',\n    whiteSpace: 'nowrap',\n    padding: '6px 0'\n  }\n}));\n\nconst ThaiNavPrimaryAddress: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <address className={classes.link}>\n      1544 Foothill Blvd,\n      <br /> La Verne 91750\n      <br />\n      <a href=\"tel:909-593-7097\">(909) 593-7097</a>\n    </address>\n  );\n};\n\nexport default ThaiNavPrimaryAddress;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    textDecoration: 'none'\n  },\n  linklogo: {\n    fontSize: '32px',\n    color: 'rgb(128,0,128)',\n    whiteSpace: 'nowrap',\n    padding: '6px 0'\n  }\n}));\n\nconst ThaiNavPrimary: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Link to=\"/\" className={classes.link}>\n      <Typography className={classes.linklogo}>Siamese Thai</Typography>\n    </Link>\n  );\n};\n\nexport default ThaiNavPrimary;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Hidden, Drawer, Box } from '@material-ui/core';\nimport ThaiLinkLogo from './ThaiLinkLogo';\n\nconst useStyles = makeStyles(() => ({\n  drawerHead: {\n    padding: '12px 0',\n    textAlign: 'center'\n  },\n  drawerHeadButton: {\n    padding: '12px'\n  }\n}));\n\nexport interface ThaiNavPrimaryDrawerProps {\n  children?: React.ReactChild | React.ReactChild[];\n  isOpen: boolean;\n  onClose: () => void;\n  onOpen: () => void;\n}\n\nconst ThaiNavPrimaryDrawer: React.FC<ThaiNavPrimaryDrawerProps> = ({\n  isOpen,\n  onClose,\n  children\n}) => {\n  const classes = useStyles();\n\n  // can be swapped with js to avoid SEO duplication of links.\n  return (\n    <Hidden smUp implementation=\"css\">\n      <Drawer\n        variant=\"temporary\"\n        anchor=\"right\"\n        open={isOpen}\n        onClose={() => onClose()}\n        ModalProps={{\n          keepMounted: true // Better open performance on mobile.\n        }}\n      >\n        <Box className={classes.drawerHead}>\n          <IconButton\n            className={classes.drawerHeadButton}\n            onClick={() => onClose()}\n          >\n            <ThaiLinkLogo />\n          </IconButton>\n          {children}\n        </Box>\n      </Drawer>\n    </Hidden>\n  );\n};\n\nexport default ThaiNavPrimaryDrawer;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tab, Tabs } from '@material-ui/core';\nimport {\n  enumRouteContact,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteOrder\n} from './enums';\n\nconst useStyles = makeStyles(() => ({\n  menuBoxTabs: {\n    flexGrow: 1,\n    '@media (min-width:1000px)': {\n      marginRight: '80px'\n    },\n    '@media (max-width:999px)': {\n      '& > div > div': {\n        justifyContent: 'flex-end'\n      }\n    },\n    '@media (max-width:889px)': {\n      display: 'none'\n    }\n  },\n  menuBoxTabsItem: {\n    minWidth: '0px',\n    fontSize: '20px',\n    padding: '12px 12px'\n  },\n  drawerTabs: {},\n  drawerTabsItem: {\n    display: '',\n    fontSize: '20px',\n    padding: '10px 12px'\n  },\n  indicator: {\n    '@media (max-width:889px)': {\n      left: '0px'\n    }\n  }\n}));\n\nconst ThaiNavPrimaryMenuRoutes = [\n  enumRouteContact,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteOrder\n];\n\nconst selectedTabRe = new RegExp(`^(${ThaiNavPrimaryMenuRoutes.join('|')})$`);\n\nexport interface ThaiNavPrimaryMenuProps {\n  type?: 'menuBoxTabs' | 'drawerTabs';\n}\n\nconst ThaiNavPrimaryMenu: React.FC<ThaiNavPrimaryMenuProps> = ({\n  type = 'menuBoxTabs'\n}) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  const classTabs = classes[type];\n  const classTabsItems = classes[`${type}Item` as const];\n  const orientation = type === 'menuBoxTabs' ? 'horizontal' : 'vertical';\n\n  const tabValue = selectedTabRe.test(location.pathname)\n    ? location.pathname\n    : false;\n\n  return (\n    <Tabs\n      className={classTabs}\n      classes={{\n        indicator: classes.indicator\n      }}\n      value={tabValue}\n      variant=\"standard\"\n      indicatorColor=\"primary\"\n      textColor=\"primary\"\n      orientation={orientation}\n      centered\n    >\n      <Tab\n        className={classTabsItems}\n        label={t('order online to go')}\n        component={Link}\n        value={enumRouteOrder}\n        to={enumRouteOrder}\n      />\n      <Tab\n        className={classTabsItems}\n        label={t('lunch special')}\n        component={Link}\n        value={enumRouteLunch}\n        to={enumRouteLunch}\n      />\n      <Tab\n        className={classTabsItems}\n        label={t('menu')}\n        component={Link}\n        value={enumRouteMenu}\n        to={enumRouteMenu}\n      />\n      <Tab\n        className={classTabsItems}\n        label={t('contact')}\n        component={Link}\n        value={enumRouteContact}\n        to={enumRouteContact}\n      />\n    </Tabs>\n  );\n};\n\nexport default ThaiNavPrimaryMenu;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Box, IconButton } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\n\nimport ThaiNavPrimaryAddress from './ThaiNavPrimaryAddress';\nimport ThaiNavPrimaryDrawer from './ThaiNavPrimaryDrawer';\nimport ThaiNavPrimaryMenu from './ThaiNavPrimaryMenu';\nimport ThaiLinkLogo from './ThaiLinkLogo';\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    flexGrow: 1,\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  menuBox: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 12px'\n  },\n  menuBoxAddress: {\n    position: 'absolute',\n    top: '70px'\n  },\n  menuBoxBurger: {\n    flexGrow: 1,\n    textAlign: 'right',\n    '@media (min-width:890px)': {\n      display: 'none'\n    }\n  },\n  menuBoxBurgerButtonMenu: {\n    fontSize: '30px'\n  }\n}));\n\nconst ThaiNavPrimary: React.FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [drawerIsOpen, drawerIsOpenSet] = React.useState(false);\n\n  useEffect(() => {\n    if (drawerIsOpen) {\n      drawerIsOpenSet(false);\n    }\n  }, [location.pathname]);\n\n  return (\n    <Paper square className={classes.menu}>\n      <Box className={classes.menuBox}>\n        <ThaiLinkLogo />\n        <div className={classes.menuBoxAddress}>\n          <ThaiNavPrimaryAddress />\n        </div>\n        <ThaiNavPrimaryMenu type=\"menuBoxTabs\" />\n        <Box className={classes.menuBoxBurger}>\n          <IconButton onClick={() => drawerIsOpenSet(!drawerIsOpen)}>\n            <Menu className={classes.menuBoxBurgerButtonMenu} />\n          </IconButton>\n        </Box>\n      </Box>\n      <ThaiNavPrimaryDrawer\n        isOpen={drawerIsOpen}\n        onOpen={() => drawerIsOpenSet(true)}\n        onClose={() => drawerIsOpenSet(false)}\n      >\n        <ThaiNavPrimaryMenu type=\"drawerTabs\" />\n      </ThaiNavPrimaryDrawer>\n    </Paper>\n  );\n};\n\nexport default ThaiNavPrimary;\n","import React, { useState, useEffect } from 'react';\nimport { getMenuJSON } from './req';\nimport type { MenuJSONType } from './types';\n\ntype useMenuItemsType = [string, MenuJSONType | undefined];\n\nconst useMenuItems = (): useMenuItemsType => {\n  const [menuJSON, menuJSONSet] = useState<MenuJSONType>();\n  const [error, errorSet] = useState('');\n\n  useEffect((): ReturnType<React.EffectCallback> => {\n    getMenuJSON()\n      .then((items) => {\n        menuJSONSet(items);\n      })\n      .catch(() => {\n        errorSet('error requesting menu');\n      });\n  }, []);\n\n  return [error, menuJSON];\n};\n\nexport default useMenuItems;\n","import type { MenuJSONType } from './types';\nimport { enumUriMenu } from './enums';\n\nconst getMenuJSON = (uri = enumUriMenu): Promise<MenuJSONType> => {\n  return fetch(uri).then((data) => data.json());\n};\n\nexport { getMenuJSON };\n","import React from 'react';\nimport type { MenuItemType } from './types';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Menu } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  section: {\n    display: 'flex',\n    padding: '0 10px'\n  },\n  col1: {\n    flexGrow: 1,\n    maxWidth: '100%'\n  },\n  col2: {\n    flexBasis: 'initial'\n  }\n}));\n\nexport interface ThaiContentMenuSectionItemProps {\n  menuItem: MenuItemType;\n}\n\nconst ThaiContentMenuSection: React.FC<ThaiContentMenuSectionItemProps> = ({\n  menuItem\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.section}>\n      <div className={classes.col1}>\n        <div className={classes.paper}>{menuItem.en_labelWide}</div>\n      </div>\n      <div className={classes.col2}>\n        <div className={classes.paper}>{menuItem.price}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ThaiContentMenuSection;\n","import React from 'react';\nimport type { MenuSectionType } from './types';\nimport ThaiContentMenuSectionItem from './ThaiContentMenuSectionItem';\n\nexport interface ThaiContentMenuSectionProps {\n  section: MenuSectionType;\n}\n\nconst ThaiContentMenuSection: React.FC<ThaiContentMenuSectionProps> = ({\n  section\n}) => {\n  return (\n    <div>\n      <div>{section.sectionName}</div>\n      {section.menuItems.map((menuItem) => (\n        <ThaiContentMenuSectionItem\n          key={menuItem.en_labelNarrow[0]}\n          menuItem={menuItem}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ThaiContentMenuSection;\n","import React from 'react';\nimport useMenuItems from './useMenuItems';\nimport { Alert } from '@material-ui/lab';\nimport ThaiContentMenuSection from './ThaiContentMenuSection';\n\nimport { menuItemsListToSectionsList } from './menuUtil';\n\nconst ThaiContentMenu: React.FC = () => {\n  const [error, menuJSON] = useMenuItems();\n\n  console.log({ menuJSON });\n  const sections = menuItemsListToSectionsList(\n    menuJSON ? menuJSON.menuItems : []\n  );\n\n  return (\n    <div>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n      {sections.map((section) => (\n        <ThaiContentMenuSection key={section.sectionName} section={section} />\n      ))}\n    </div>\n  );\n};\n\nexport default ThaiContentMenu;\n","import type { MenuItemListType, MenuSectionListType } from './types';\n\ntype MenuMappingType = {\n  [menuItemType: string]: MenuItemListType;\n};\n\nconst menuItemsListToSectionsList = (\n  menu: MenuItemListType\n): MenuSectionListType => {\n  const sections = menu.reduce((sectionMap, item) => {\n    return item.menuItemTypes.reduce((map, itemType) => {\n      map[itemType] = map[itemType] || [];\n      map[itemType].push(item);\n      return map;\n    }, sectionMap);\n  }, [] as unknown as MenuMappingType);\n\n  return Object.keys(sections).reduce((prev, key) => {\n    prev.push({\n      sectionName: key,\n      menuItems: sections[key]\n    });\n    return prev;\n  }, [] as MenuSectionListType);\n};\n\nexport { menuItemsListToSectionsList };\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ThaiNavPrimary from './ThaiNavPrimary';\nimport ThaiContentMenu from './ThaiContentMenu';\n\nimport {\n  enumRouteHome,\n  enumRouteContact,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteOrder\n} from './enums';\n\nconst Thai: React.FC = () => {\n  return (\n    <div>\n      <ThaiNavPrimary />\n      <Switch>\n        <Route path={enumRouteHome} exact>\n          <div>home</div>\n        </Route>\n        <Route path={enumRouteContact}>\n          <div>contact</div>\n        </Route>\n        <Route path={enumRouteLunch}>\n          <div>lunch</div>\n        </Route>\n        <Route path={enumRouteMenu}>\n          <ThaiContentMenu />\n        </Route>\n        <Route path={enumRouteOrder}>\n          <div>order</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Thai;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nconst resources = {\n  en: {\n    translation: {\n      home: 'home',\n      contact: 'contact'\n    }\n  }\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: true,\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport './index.css';\n// import 'foundation-sites/dist/css/foundation.min.css';\nimport Thai from './Thai';\nimport './i18n';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // main: 'rgba(250,84,10,1)'\n      main: 'rgb(128,0,128)'\n    }\n  }\n});\n\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <Thai />\n      </MuiThemeProvider>\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}