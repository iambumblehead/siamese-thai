{"version":3,"sources":["enums.ts","ThaiLinkLogo.tsx","ThaiNavPrimaryDrawer.tsx","ThaiNavPrimaryMenu.tsx","ThaiNavPrimary.tsx","useMenuItems.ts","req.ts","ThaiContentMenuSectionItem.tsx","ThaiContentMenuSection.tsx","ThaiContentMenu.tsx","menuUtil.ts","Thai.tsx","i18n.ts","index.tsx"],"names":["list","useStyles","makeStyles","logo","whiteSpace","ThaiNavPrimary","classes","to","Typography","className","drawerHead","padding","textAlign","drawerHeadButton","ThaiNavPrimaryDrawer","isOpen","onClose","children","Hidden","smUp","implementation","Drawer","variant","anchor","open","ModalProps","keepMounted","Box","IconButton","onClick","ThaiLinkLogo","enumRouteOrder","enumRouteLunch","enumRouteMenu","enumRouteContact","enumUriMenu","globalThis","uriMenu","Object","freeze","reduce","p","val","assign","menuBoxTabs","flexGrow","marginRight","justifyContent","display","menuBoxTabsItem","minWidth","drawerTabs","drawerTabsItem","selectedTabRe","RegExp","join","ThaiNavPrimaryMenu","type","location","useLocation","t","useTranslation","classTabs","classTabsItems","orientation","tabValue","test","pathname","Tabs","value","indicatorColor","textColor","centered","Tab","label","component","Link","theme","menu","color","palette","text","secondary","menuBox","flex","backgroundColor","alignItems","menuBoxBurger","React","useState","drawerIsOpen","drawerIsOpenSet","useEffect","Paper","square","Menu","onOpen","useMenuItems","menuJSON","menuJSONSet","error","errorSet","fetch","then","data","json","getMenuJSON","items","catch","root","paper","spacing","section","col1","maxWidth","col2","flexBasis","ThaiContentMenuSection","menuItem","en_labelWide","price","sectionName","menuItems","map","ThaiContentMenuSectionItem","en_labelNarrow","ThaiContentMenu","console","log","sections","sectionMap","item","menuItemTypes","itemType","push","keys","prev","key","menuItemsListToSectionsList","Alert","severity","Thai","path","exact","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","home","contact","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea078c96.chunk.js","sourcesContent":["const toObject = (list: Array<string>) =>\n  Object.freeze(list.reduce((p, val) => Object.assign(p, { [val]: val }), {}));\n\nconst enumRouteHome = '/';\nconst enumRouteOrder = '/order';\nconst enumRouteLunch = '/lunch-special';\nconst enumRouteMenu = '/menu';\nconst enumRouteContact = '/contact';\n\ndeclare global {\n  // eslint-disable-next-line\n  var uriMenu: string;\n}\n\nconst enumUriMenu = globalThis.uriMenu || './menu.json';\n\nconst enumRoutes = toObject([\n  enumRouteHome,\n  enumRouteOrder,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteContact\n]);\n\nexport {\n  enumRouteHome,\n  enumRouteOrder,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteContact,\n  enumRoutes,\n  enumUriMenu\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  logo: {\n    whiteSpace: 'nowrap'\n  }\n}));\n\nconst ThaiNavPrimary: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Link to=\"/\">\n      <Typography className={classes.logo}>Siamese Thai</Typography>\n    </Link>\n  );\n};\n\nexport default ThaiNavPrimary;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Hidden, Drawer, Box } from '@material-ui/core';\nimport ThaiLinkLogo from './ThaiLinkLogo';\n\nconst useStyles = makeStyles(() => ({\n  drawerHead: {\n    padding: '12px',\n    textAlign: 'center'\n  },\n  drawerHeadButton: {\n    padding: '12px'\n  }\n}));\n\nexport interface ThaiNavPrimaryDrawerProps {\n  children?: React.ReactChild | React.ReactChild[];\n  isOpen: boolean;\n  onClose: () => void;\n  onOpen: () => void;\n}\n\nconst ThaiNavPrimaryDrawer: React.FC<ThaiNavPrimaryDrawerProps> = ({\n  isOpen,\n  onClose,\n  children\n}) => {\n  const classes = useStyles();\n\n  // can be swapped with js to avoid SEO duplication of links.\n  return (\n    <Hidden smUp implementation=\"css\">\n      <Drawer\n        variant=\"temporary\"\n        anchor=\"right\"\n        open={isOpen}\n        onClose={() => onClose()}\n        ModalProps={{\n          keepMounted: true // Better open performance on mobile.\n        }}\n      >\n        <Box className={classes.drawerHead}>\n          <IconButton\n            className={classes.drawerHeadButton}\n            onClick={() => onClose()}\n          >\n            <ThaiLinkLogo />\n          </IconButton>\n          {children}\n        </Box>\n      </Drawer>\n    </Hidden>\n  );\n};\n\nexport default ThaiNavPrimaryDrawer;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tab, Tabs } from '@material-ui/core';\nimport {\n  enumRouteContact,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteOrder\n} from './enums';\n\nconst useStyles = makeStyles(() => ({\n  menuBoxTabs: {\n    // justifyContent: 'flex-end',\n    flexGrow: 1,\n    '@media (min-width:800px)': {\n      marginRight: '80px'\n    },\n    '@media (max-width:799px)': {\n      '& > div > div': {\n        justifyContent: 'flex-end'\n      }\n    },\n    // [theme.breakpoints.down('sm')]: {\n    '@media (max-width:639px)': {\n      display: 'none'\n    }\n  },\n  menuBoxTabsItem: {\n    minWidth: '0px'\n  },\n  drawerTabs: {},\n  drawerTabsItem: {\n    display: ''\n  }\n}));\n\nconst ThaiNavPrimaryMenuRoutes = [\n  enumRouteContact,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteOrder\n];\n\nconst selectedTabRe = new RegExp(`^(${ThaiNavPrimaryMenuRoutes.join('|')})$`);\n\nexport interface ThaiNavPrimaryMenuProps {\n  type?: 'menuBoxTabs' | 'drawerTabs';\n}\n\nconst ThaiNavPrimaryMenu: React.FC<ThaiNavPrimaryMenuProps> = ({\n  type = 'menuBoxTabs'\n}) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  const classTabs = classes[type];\n  const classTabsItems = classes[`${type}Item` as const];\n  const orientation = type === 'menuBoxTabs' ? 'horizontal' : 'vertical';\n\n  const tabValue = selectedTabRe.test(location.pathname)\n    ? location.pathname\n    : false;\n\n  return (\n    <Tabs\n      className={classTabs}\n      value={tabValue}\n      variant=\"standard\"\n      indicatorColor=\"secondary\"\n      textColor=\"secondary\"\n      orientation={orientation}\n      centered\n    >\n      <Tab\n        className={classTabsItems}\n        label={t('order online to go')}\n        component={Link}\n        value={enumRouteOrder}\n        to={enumRouteOrder}\n      />\n      <Tab\n        className={classTabsItems}\n        label={t('lunch special')}\n        component={Link}\n        value={enumRouteLunch}\n        to={enumRouteLunch}\n      />\n      <Tab\n        className={classTabsItems}\n        label={t('menu')}\n        component={Link}\n        value={enumRouteMenu}\n        to={enumRouteMenu}\n      />\n      <Tab\n        className={classTabsItems}\n        label={t('contact')}\n        component={Link}\n        value={enumRouteContact}\n        to={enumRouteContact}\n      />\n    </Tabs>\n  );\n};\n\nexport default ThaiNavPrimaryMenu;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Box, IconButton } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\n\nimport ThaiNavPrimaryDrawer from './ThaiNavPrimaryDrawer';\nimport ThaiNavPrimaryMenu from './ThaiNavPrimaryMenu';\nimport ThaiLinkLogo from './ThaiLinkLogo';\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    flexGrow: 1,\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  menuBox: {\n    flex: 1,\n    display: 'flex',\n    backgroundColor: 'grey',\n    alignItems: 'center',\n    padding: '12px'\n  },\n  menuBoxBurger: {\n    flexGrow: 1,\n    textAlign: 'right',\n    '@media (min-width:640px)': {\n      display: 'none'\n    }\n  }\n}));\n\nconst ThaiNavPrimary: React.FC = () => {\n  const classes = useStyles();\n  const location = useLocation();\n  const [drawerIsOpen, drawerIsOpenSet] = React.useState(false);\n\n  useEffect(() => {\n    if (drawerIsOpen) {\n      drawerIsOpenSet(false);\n    }\n  }, [location.pathname]);\n\n  return (\n    <Paper square className={classes.menu}>\n      <Box className={classes.menuBox}>\n        <ThaiLinkLogo />\n        <ThaiNavPrimaryMenu type=\"menuBoxTabs\" />\n        <Box className={classes.menuBoxBurger}>\n          <IconButton onClick={() => drawerIsOpenSet(!drawerIsOpen)}>\n            <Menu />\n          </IconButton>\n        </Box>\n      </Box>\n      <ThaiNavPrimaryDrawer\n        isOpen={drawerIsOpen}\n        onOpen={() => drawerIsOpenSet(true)}\n        onClose={() => drawerIsOpenSet(false)}\n      >\n        <ThaiNavPrimaryMenu type=\"drawerTabs\" />\n      </ThaiNavPrimaryDrawer>\n    </Paper>\n  );\n};\n\nexport default ThaiNavPrimary;\n","import React, { useState, useEffect } from 'react';\nimport { getMenuJSON } from './req';\nimport type { MenuJSONType } from './types';\n\ntype useMenuItemsType = [string, MenuJSONType | undefined];\n\nconst useMenuItems = (): useMenuItemsType => {\n  const [menuJSON, menuJSONSet] = useState<MenuJSONType>();\n  const [error, errorSet] = useState('');\n\n  useEffect((): ReturnType<React.EffectCallback> => {\n    getMenuJSON()\n      .then((items) => {\n        menuJSONSet(items);\n      })\n      .catch(() => {\n        errorSet('error requesting menu');\n      });\n  }, []);\n\n  return [error, menuJSON];\n};\n\nexport default useMenuItems;\n","import type { MenuJSONType } from './types';\nimport { enumUriMenu } from './enums';\n\nconst getMenuJSON = (uri = enumUriMenu): Promise<MenuJSONType> => {\n  return fetch(uri).then((data) => data.json());\n};\n\nexport { getMenuJSON };\n","import React from 'react';\nimport type { MenuItemType } from './types';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Menu } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  section: {\n    display: 'flex',\n    padding: '0 10px'\n  },\n  col1: {\n    flexGrow: 1,\n    maxWidth: '100%'\n  },\n  col2: {\n    flexBasis: 'initial'\n  }\n}));\n\nexport interface ThaiContentMenuSectionItemProps {\n  menuItem: MenuItemType;\n}\n\nconst ThaiContentMenuSection: React.FC<ThaiContentMenuSectionItemProps> = ({\n  menuItem\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.section}>\n      <div className={classes.col1}>\n        <div className={classes.paper}>{menuItem.en_labelWide}</div>\n      </div>\n      <div className={classes.col2}>\n        <div className={classes.paper}>{menuItem.price}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ThaiContentMenuSection;\n","import React from 'react';\nimport type { MenuSectionType } from './types';\nimport ThaiContentMenuSectionItem from './ThaiContentMenuSectionItem';\n\nexport interface ThaiContentMenuSectionProps {\n  section: MenuSectionType;\n}\n\nconst ThaiContentMenuSection: React.FC<ThaiContentMenuSectionProps> = ({\n  section\n}) => {\n  return (\n    <div>\n      <div>{section.sectionName}</div>\n      {section.menuItems.map((menuItem) => (\n        <ThaiContentMenuSectionItem\n          key={menuItem.en_labelNarrow[0]}\n          menuItem={menuItem}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ThaiContentMenuSection;\n","import React from 'react';\nimport useMenuItems from './useMenuItems';\nimport { Alert } from '@material-ui/lab';\nimport ThaiContentMenuSection from './ThaiContentMenuSection';\n\nimport { menuItemsListToSectionsList } from './menuUtil';\n\nconst ThaiContentMenu: React.FC = () => {\n  const [error, menuJSON] = useMenuItems();\n\n  console.log({ menuJSON });\n  const sections = menuItemsListToSectionsList(\n    menuJSON ? menuJSON.menuItems : []\n  );\n\n  return (\n    <div>\n      {error && <Alert severity=\"error\">{error}</Alert>}\n      {sections.map((section) => (\n        <ThaiContentMenuSection key={section.sectionName} section={section} />\n      ))}\n    </div>\n  );\n};\n\nexport default ThaiContentMenu;\n","import type { MenuItemListType, MenuSectionListType } from './types';\n\ntype MenuMappingType = {\n  [menuItemType: string]: MenuItemListType;\n};\n\nconst menuItemsListToSectionsList = (\n  menu: MenuItemListType\n): MenuSectionListType => {\n  const sections = menu.reduce((sectionMap, item) => {\n    return item.menuItemTypes.reduce((map, itemType) => {\n      map[itemType] = map[itemType] || [];\n      map[itemType].push(item);\n      return map;\n    }, sectionMap);\n  }, [] as unknown as MenuMappingType);\n\n  return Object.keys(sections).reduce((prev, key) => {\n    prev.push({\n      sectionName: key,\n      menuItems: sections[key]\n    });\n    return prev;\n  }, [] as MenuSectionListType);\n};\n\nexport { menuItemsListToSectionsList };\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ThaiNavPrimary from './ThaiNavPrimary';\nimport ThaiContentMenu from './ThaiContentMenu';\n\nimport {\n  enumRouteHome,\n  enumRouteContact,\n  enumRouteLunch,\n  enumRouteMenu,\n  enumRouteOrder\n} from './enums';\n\nconst Thai: React.FC = () => {\n  return (\n    <div>\n      <ThaiNavPrimary />\n      <Switch>\n        <Route path={enumRouteHome} exact>\n          <div>home</div>\n        </Route>\n        <Route path={enumRouteContact}>\n          <div>contact</div>\n        </Route>\n        <Route path={enumRouteLunch}>\n          <div>lunch</div>\n        </Route>\n        <Route path={enumRouteMenu}>\n          <ThaiContentMenu />\n        </Route>\n        <Route path={enumRouteOrder}>\n          <div>order</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Thai;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nconst resources = {\n  en: {\n    translation: {\n      home: 'home',\n      contact: 'contact'\n    }\n  }\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: true,\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport Thai from './Thai';\nimport './i18n';\n\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <Thai />\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}